===== Critical Files for Bhakticoin (BKTI) =====

Bhakticoin relies on several essential files that define its blockchain structure, premine configuration, and token supply. These files are securely hosted on Uncle A.

==== Genesis File ====
  * **Purpose**: Defines the initial state of the blockchain, including account balances and contract deployments.
  * **File Path**: `/Secure/Blockchain/BKTI/genesis.json`
  * **Notes**: Accessible only to administrators. Use SSH or a secure file transfer client to retrieve this file.

==== Premine File ====
  * **Purpose**: Specifies the initial allocation of tokens for the blockchain launch.
  * **File Path**: `/Secure/Blockchain/BKTI/premine.json`
  * **Notes**: Ensures token allocations are correctly configured for chain initialization.

==== Supply File ====
  * **Purpose**: Contains details about the total token supply and any special configurations for adjustments.
  * **File Path**: `/Secure/Blockchain/BKTI/supply.json`
  * **Notes**: Carefully managed to prevent unauthorized changes to the token supply.

==== Validator Private Key Passphrase ====
  * **Purpose**: Secures the validator node’s private key.
  * **File Path**: `/Secure/Passwords/BKTI/password.txt`
  * **Notes**: Highly confidential and critical for validator operations.

===== General Information =====
  * **Name:** Bhakticoin
  * **Symbol:** BKTI
  * **Chain ID:** 482
  * **RPC URL:** `http://45.131.109.207:8545`
  * **Network Type:** Private Ethereum Network
  * **Consensus Algorithm:** Clique (Proof-of-Authority)
  * **P2P Port:** 30303
  * **HTTP RPC Port:** 8545

==== Currency Supply ====
  * **Total Premined Supply:** 1,440,000,000 BKTI
  * **Wallet Address:** `0x01d3d...C6992`

==== Directory Structure ====
The critical files for Bhakticoin are organized as follows:

 /Secure/  
    ├── Backups/  
    ├── Blockchain/  
    │    └── BKTI/  
    │         ├── data/  
    │         │    ├── besu.networks  
    │         │    ├── besu.ports  
    │         │    ├── caches/  
    │         │    │    └── CACHE_METADATA.json  
    │         │    ├── database/  
    │         │    │    ├── 000032.sst, 000033.sst, ...  
    │         │    ├── DATABASE_METADATA.json  
    │         │    ├── geth/  
    │         │    │    ├── chaindata/  
    │         │    │    │    ├── ancient/  
    │         │    │    │    │    ├── chain/  
    │         │    │    │    │    ├── state/  
    │         │    ├── key  
    │         │    ├── keystore/  
    │         ├── data-new/  
    │         │    ├── besu.networks  
    │         │    ├── besu.ports  
    │         │    ├── caches/  
    │         │    │    └── CACHE_METADATA.json  
    │         │    ├── database/  
    │         │    │    ├── 000084.sst, 000085.sst, ...  
    │         │    ├── DATABASE_METADATA.json  
    │         │    ├── key  
    │         │    └── uploads/  
    │         ├── genesis.json  
    │         ├── premine.json  
    │         └── supply.json  
    └── Passwords/  
         └── BKTI/  
              └── password.txt  
              
==== Node Management ====

=== A. Start Node ===
To start the blockchain node, execute the following command:

  <code>
  /usr/local/besu/bin/besu \
    --data-path=/Secure/Blockchain/BKTI/data-new \
    --genesis-file=/Secure/Blockchain/BKTI/genesis.json \
    --rpc-http-enabled \
    --rpc-http-port=8545 \
    --rpc-http-api=ETH,NET,CLIQUE \
    --rpc-http-host=0.0.0.0 \
    --rpc-http-cors-origins="*" \
    --p2p-port=30303 \
    --host-whitelist="*"
  </code>

=== B. Stop Node ===
To safely stop the node, use:

  <code>
  kill $(pidof besu)
  </code>
  
=== C. Check Node Status ===
  * **Check if Besu is running:**
    <code>
    ps aux | grep besu
    </code>
  * **Check RPC Port:**
    <code>
    netstat -tuln | grep 8545
    </code>
  * **Tail Logs:**
    <code>
    tail -f /path/to/besu/logfile.log
    </code>
  * **Verify RPC Connection:**
    <code>
    curl -X POST --data '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":1}' http://45.131.109.207:8545
    </code>
    
==== Security Recommendations ====
  * Use firewalls to restrict access to RPC and P2P ports (e.g., use `ufw`).
  * Avoid exposing RPC endpoints publicly unless necessary.
  * Keep the Besu software updated to the latest version.

==== Adding the Node as a Validator ====
If this node needs to be a validator, you will need to:
1. Contact an existing validator or the network admin to propose the node’s public key for validator addition.
2. Provide your `nodekey` (found in `/Secure/Blockchain/BKTI/node-data/geth/nodekey`) to the admin.

==== Troubleshooting ====
If you encounter issues:
* Ensure all ports (30303 for P2P, 8545 for RPC) are open and not blocked by a firewall.
* Check your logs at `/Secure/Blockchain/BKTI/node-data/logs`.

==== Notes ====
* The Bhakticoin network operates on the Proof-of-Authority (PoA) Clique consensus algorithm.
* Regularly update your Besu client to ensure compatibility with the latest network changes.

===== Node Creation for Bhakticoin (BKTI) =====

This guide will walk you through setting up a node on the Bhakticoin network.

==== Requirements ====
To set up a node, you will need the following:
- A machine with Ubuntu 20.04 or later (or a compatible Linux distribution).
- At least 2 CPU cores, 4 GB RAM, and 20 GB of available disk space.
- A stable internet connection.
- The `besu` client installed on your system.

==== Steps to Create a Node ====
=== 1. Download and Install Hyperledger Besu ===
a. Update your system:
sudo apt update && sudo apt upgrade -y

b. Install Java (required for Besu):
sudo apt install openjdk-11-jre -y

c. Download Besu:
wget https://hyperledger.jfrog.io/artifactory/besu-binaries/besu-22.10.1.tar.gz

d. Extract Besu and move it to `/usr/local/`:
tar -xvzf besu-22.10.1.tar.gz
sudo mv besu-22.10.1 /usr/local/besu

=== 2. Configure the Node ===
a. Create the data directory:
mkdir -p /Secure/Blockchain/BKTI/node-data

b. Add the `genesis.json` file:
Place the `genesis.json` file from the Bhakticoin network in the `/Secure/Blockchain/BKTI/node-data/` directory. If you don’t have the file, contact Mathuresh Das or another network admin.

=== 3. Initialize the Node ===
Run the following command to initialize the node:
sudo /usr/local/besu/bin/besu --data-path=/Secure/Blockchain/BKTI/node-data --genesis-file=/Secure/Blockchain/BKTI/node-data/genesis.json init

=== 4. Start the Node ===
Use the following command to start the node:
sudo /usr/local/besu/bin/besu --data-path=/Secure/Blockchain/BKTI/node-data --rpc-http-enabled --rpc-http-api=ETH,NET,WEB3 --host-whitelist="*" --rpc-http-cors-origins="all"

==== Troubleshooting ====
If you encounter issues, verify that:
1. The system meets the requirements listed above.
2. The `genesis.json` file is correctly placed in the specified directory.
3. All commands are executed with the appropriate permissions (use `sudo` where necessary).

For further assistance, contact the Bhakticoin network administrators or Mathuresh Das.

==== Extra Considerations ====

When setting up and maintaining a node on the Bhakticoin network, there are additional aspects to consider for security, performance, and troubleshooting. Below is a list of best practices and optional features to enhance your node setup.

=== Firewall Configuration ===
To ensure your node communicates effectively with the Bhakticoin network, configure your firewall to allow necessary ports:

- RPC HTTP (if enabled):
  ```
  sudo ufw allow 8545/tcp
  ```
- P2P Communication:
  ```
  sudo ufw allow 30303/tcp
  ```
- Update the firewall rules based on your network needs and security policies.

=== System Monitoring ===
Monitor your node's status and activity to ensure it is running correctly:

- Check logs for errors or warnings:
  ```
  tail -f /Secure/Blockchain/BKTI/node-data/logs/besu.log
  ```
- Monitor CPU and memory usage:
  ```
  top
  ```
  or
  ```
  htop
  ```
- Use tools like Prometheus and Grafana to monitor node performance metrics.

=== Peer Connections ===
Verify that your node is connecting to other peers in the network:

- Use an RPC API call to check peer count:
  ```
  curl -X POST --data '{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":1}' -H "Content-Type: application/json" localhost:8545
  ```
- Ensure the node is not isolated by confirming an active peer list.

=== Genesis File Notes ===
The `genesis.json` file is critical for initializing your node. Ensure you:

- Obtain the correct `genesis.json` file from the Bhakticoin network admin or Mathuresh Das.
- Verify its integrity and authenticity.
- Place it in the directory: `/Secure/Blockchain/BKTI/genesis.json`.

=== Node Identity ===
Each node should have a unique identity to avoid conflicts in the network:

- Verify or generate the `nodekey` in the directory: `/Secure/Blockchain/BKTI/node-data/key`.
- If missing, run the following command to generate one:
  ```
  openssl rand -hex 32 > /Secure/Blockchain/BKTI/node-data/key
  ```

=== Security Best Practices ===
1. **Use a Non-Root User:**
   Run the node as a dedicated non-root user for better security.
   ```
   adduser bhaktinode
   su - bhaktinode
   ```

2. **Restrict SSH Access:**
   Limit SSH access to trusted IPs and use key-based authentication.
   ```
   sudo ufw allow from <trusted-ip> to any port 22
   ```

3. **Update Regularly:**
   Keep your system, Java, and Besu installation up to date to avoid vulnerabilities:
   ```
   sudo apt update && sudo apt upgrade -y
   ```

=== Syncing Modes ===
If your node requires faster setup, consider using a fast sync mode:

- Default full sync:
  ```
  --sync-mode=FULL
  ```
- Fast sync mode (recommended for quick setup):
  ```
  --sync-mode=FAST
  ```

=== Backup Procedures ===
Regularly back up your node's critical data:

- Back up the keystore:
  ```
  cp -r /Secure/Blockchain/BKTI/data/keystore /path/to/backup
  ```
- Back up the chain data:
  ```
  tar -czvf chain-backup.tar.gz /Secure/Blockchain/BKTI/node-data
  ```
- Store backups securely, preferably on an offline device.

=== Testing the Node ===
Verify that the node is operating correctly:

- Check synchronization status:
  ```
  curl -X POST --data '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}' -H "Content-Type: application/json" localhost:8545
  ```
- Confirm the current block number:
  ```
  curl -X POST --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' -H "Content-Type: application/json" localhost:8545
  ```

=== Metrics and Monitoring ===
Enable metrics for advanced monitoring:

- Start the node with metrics enabled:
  ```
  --metrics-enabled --metrics-host=0.0.0.0 --metrics-port=9545
  ```
- Integrate with Prometheus or Grafana to visualize performance data.

=== Docker Alternative ===
For easier deployment, consider setting up the node using Docker:

- Example Docker Compose file:
  ```yaml
  version: '3.7'
  services:
    besu:
      image: hyperledger/besu:latest
      container_name: bhakticoin-node
      volumes:
        - ./data:/Secure/Blockchain/BKTI/node-data
      ports:
        - "30303:30303"
        - "8545:8545"
      command: ["--network=mainnet", "--data-path=/Secure/Blockchain/BKTI/node-data"]
 

              
===== History of Bhakticoin (BKTI) =====

Bhakticoin was conceived on January 1, 2024, as a cryptocurrency project designed to fund and support its creator, Mathuresh Das', mission; dissemination of Dhammunism. Below are the key milestones leading to its creation:

  * **January 1, 2024**: The idea for Bhakticoin was discussed with a blockchain developer, leading to the selection of a Proof of Authority (PoA) consensus mechanism for fast and secure transactions.
  * **January 2, 2024**: The name Bhakticoin (BKTI) was finalized, with a total supply of 4.32 billion coins, of which 1.44 billion were premined.
  * **January 3, 2024**: A prepaid server was set up to host the first validator nodes and serve as the API endpoint for the blockchain network.
  * **January 14-16, 2024**: Wallet integration and premined coin setup were completed, with guidance provided for importing accounts into MetaMask.
  * **Jan 18, 2024:** Blockchain and wallet integration completed.
  * **Dec 14, 2024:** Blockchain reinstated using Hyperledger Besu.by Mathuresh Das after deletion due to unpaid server.

The initial collaboration emphasized simplicity, security, and scalability, forming the backbone of the Bhakticoin network.

==== Legacy ====
This process serves as a testament to the dedication and vision behind Bhakticoin, providing a foundation for its mission of financial empowerment and innovation.

---


